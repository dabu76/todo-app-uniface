# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - webapp-ToDo

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4 # 리포지토리 코드를 워크플로우 러너로 체크아웃합니다.

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "v8.0" # .NET 8.0 SDK를 설정합니다.

      - name: Build with dotnet
        # 'server' 디렉토리로 작업 경로를 설정합니다.
        # 이 디렉토리 안에 server.sln과 server.csproj 파일이 있습니다.
        working-directory: ./server
        run: dotnet build server.sln --configuration Release # 솔루션 파일을 명시하여 빌드합니다.

      - name: dotnet publish
        # 'server' 디렉토리로 작업 경로를 설정하여 게시 명령도 올바른 위치에서 실행되도록 합니다.
        working-directory: ./server
        # Release 구성으로 프로젝트를 게시하고, 출력 경로를 지정합니다.
        # ${{env.DOTNET_ROOT}}/myapp는 러너의 환경 변수 DOTNET_ROOT 경로 아래에 myapp 폴더를 생성합니다.
        run: dotnet publish server.sln -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app # 아티팩트의 이름입니다.
          # 이전 단계에서 게시된 애플리케이션의 경로를 지정합니다.
          # 이 경로는 러너의 파일 시스템 루트를 기준으로 합니다.
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build # 'build' 작업이 성공적으로 완료된 후에 이 'deploy' 작업이 실행됩니다.

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app # 'build' 작업에서 업로드한 아티팩트 이름을 지정하여 다운로드합니다.

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3 # Azure 웹 앱 배포 액션의 버전 3을 사용합니다.
        with:
          app-name: "webapp-ToDo" # 배포할 Azure 웹 앱의 이름입니다.
          slot-name: "Production" # 배포할 웹 앱 슬롯의 이름입니다.
          package: . # 다운로드된 아티팩트(.net-app)의 루트를 배포 패키지로 사용합니다.
          # Azure 웹 앱에 인증하기 위한 게시 프로필 시크릿입니다.
          # 이 시크릿은 GitHub 리포지토리 설정의 Secrets에 안전하게 저장되어 있어야 합니다.
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_6CB30E3DD82A4595A503C317BC13AC41 }}
